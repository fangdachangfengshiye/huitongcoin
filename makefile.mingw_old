# Copyright (c) 2009-2010 Satoshi Nakamoto
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

USE_UPNP:=1
USE_IPV6:=0
CC            = gcc
INCLUDEPATHS= \
 -I"C:\deps\boost_1_55_0" \
 -I"C:\deps\db-4.8.30.NC\build_unix" \
 -I"C:\deps\openssl-1.0.1g\include"

LIBPATHS= \
 -L"C:\deps\boost_1_55_0\stage\lib" \
 -L"C:\deps\db-4.8.30.NC\build_unix" \
 -L"C:\deps\openssl-1.0.1g"

LIBS= \
 -l boost_system-mgw48-mt-s-1_55 \
 -l boost_filesystem-mgw48-mt-s-1_55 \
 -l boost_program_options-mgw48-mt-s-1_55 \
 -l boost_thread-mgw48-mt-s-1_55 \
 -l boost_chrono-mgw48-mt-s-1_55 \
 -l db_cxx \
 -l ssl \
 -l crypto

DEFS=-DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE
DEBUGFLAGS=-g
CFLAGS=-mthreads -O2 -msse2 -w -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter $(DEFS) -static
LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat

TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)

ifndef USE_UPNP
	override USE_UPNP = -
endif
ifneq (${USE_UPNP}, -)
 INCLUDEPATHS += -I"C:\deps\miniupnpc"
 LIBPATHS += -L"C:\deps\miniupnpc"
 LIBS += -l miniupnpc -l iphlpapi
 DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)
endif

ifneq (${USE_IPV6}, -)
	DEFS += -DUSE_IPV6=$(USE_IPV6)
endif

LIBS += -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    obj/alert.o \
    obj/version.o \
    obj/checkpoints.o \
    obj/netbase.o \
    obj/addrman.o \
    obj/crypter.o \
    obj/key.o \
    obj/db.o \
    obj/init.o \
    obj/irc.o \
    obj/keystore.o \
    obj/main.o \
    obj/net.o \
    obj/protocol.o \
    obj/bitcoinrpc.o \
    obj/rpcdump.o \
    obj/rpcnet.o \
    obj/rpcmining.o \
    obj/rpcwallet.o \
    obj/rpcblockchain.o \
    obj/rpcrawtransaction.o \
    obj/script.o \
    obj/sync.o \
    obj/util.o \
    obj/wallet.o \
    obj/walletdb.o \
    obj/noui.o \
    obj/kernel.o \
    obj/pbkdf2.o \
    obj/scrypt.o \
    obj/scrypt-x86.o \
    obj/scrypt-x86_64.o \
    obj/blake.o \
	obj/bmw.o \
	obj/cubehash.o \
	obj/echo.o \
	obj/groestl.o \
	obj/jh.o \
	obj/keccak.o \
	obj/luffa.o \
	obj/skein.o \
	obj/shavite.o \
	obj/simd.o

all: mudancoind.exe

test check: test_mudancoin.exe FORCE
	test_mudancoin.exe

obj/alert.o: alert.cpp alert.h \
		uint256.h \
		util.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		key.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		sync.h \
		ui_interface.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/alert.o alert.cpp

obj/version.o: version.cpp version.h \
		clientversion.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/version.o version.cpp
	
obj/util.o: util.cpp util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		sync.h \
		strlcpy.h \
		ui_interface.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/util.o util.cpp

obj/sync.o: sync.cpp sync.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/sync.o sync.cpp
	
obj/netbase.o: netbase.cpp netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		util.h \
		uint256.h \
		sync.h \
		strlcpy.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/netbase.o netbase.cpp

obj/key.o: key.cpp key.h \
		allocators.h \
		serialize.h \
		version.h \
		clientversion.h \
		uint256.h \
		util.h \
		netbase.h \
		compat.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/key.o key.cpp

obj/script.o: script.cpp script.h \
		keystore.h \
		crypter.h \
		allocators.h \
		key.h \
		serialize.h \
		version.h \
		clientversion.h \
		uint256.h \
		util.h \
		netbase.h \
		compat.h \
		sync.h \
		bignum.h \
		main.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/script.o script.cpp

obj/main.o: main.cpp alert.h \
		uint256.h \
		util.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		checkpoints.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		sync.h \
		db.h \
		main.h \
		bignum.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		init.h \
		wallet.h \
		ui_interface.h \
		walletdb.h \
		base58.h \
		kernel.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/main.o main.cpp

obj/init.o: init.cpp db.h \
		main.h \
		bignum.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		sync.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		walletdb.h \
		base58.h \
		bitcoinrpc.h \
		json/json_spirit_reader_template.h \
		json/json_spirit_value.h \
		json/json_spirit_error_position.h \
		json/json_spirit_writer_template.h \
		json/json_spirit_utils.h \
		checkpoints.h \
		init.h \
		wallet.h \
		ui_interface.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/init.o init.cpp

obj/net.o: net.cpp irc.h \
		db.h \
		main.h \
		bignum.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		sync.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		init.h \
		wallet.h \
		ui_interface.h \
		walletdb.h \
		base58.h \
		strlcpy.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/net.o net.cpp

obj/checkpoints.o: checkpoints.cpp checkpoints.h \
		net.h \
		mruset.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		protocol.h \
		uint256.h \
		addrman.h \
		util.h \
		sync.h \
		db.h \
		main.h \
		bignum.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/checkpoints.o checkpoints.cpp

obj/addrman.o: addrman.cpp addrman.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		protocol.h \
		uint256.h \
		util.h \
		sync.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/addrman.o addrman.cpp

obj/db.o: db.cpp db.h \
		main.h \
		bignum.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		sync.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		checkpoints.h \
		kernel.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/db.o db.cpp

obj/walletdb.o: walletdb.cpp walletdb.h \
		db.h \
		main.h \
		bignum.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		sync.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		base58.h \
		wallet.h \
		ui_interface.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/walletdb.o walletdb.cpp
	
obj/crypter.o: crypter.cpp crypter.h \
		allocators.h \
		key.h \
		serialize.h \
		version.h \
		clientversion.h \
		uint256.h \
		util.h \
		netbase.h \
		compat.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/crypter.o crypter.cpp
	
obj/irc.o: irc.cpp irc.h \
		net.h \
		mruset.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		protocol.h \
		uint256.h \
		addrman.h \
		util.h \
		sync.h \
		strlcpy.h \
		base58.h \
		bignum.h \
		key.h \
		script.h \
		keystore.h \
		crypter.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/irc.o irc.cpp
	
obj/wallet.o: wallet.cpp main.h \
		bignum.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		sync.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		wallet.h \
		ui_interface.h \
		walletdb.h \
		db.h \
		base58.h \
		kernel.h \
		coincontrol.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/wallet.o wallet.cpp

obj/keystore.o: keystore.cpp keystore.h \
		crypter.h \
		allocators.h \
		key.h \
		serialize.h \
		version.h \
		clientversion.h \
		uint256.h \
		util.h \
		netbase.h \
		compat.h \
		sync.h \
		script.h \
		bignum.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/keystore.o keystore.cpp
	
obj/protocol.o: protocol.cpp protocol.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		netbase.h \
		compat.h \
		uint256.h \
		util.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/protocol.o protocol.cpp
	
obj/bitcoinrpc.o: bitcoinrpc.cpp init.h \
		wallet.h \
		main.h \
		bignum.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		sync.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		ui_interface.h \
		walletdb.h \
		db.h \
		base58.h \
		bitcoinrpc.h \
		json/json_spirit_reader_template.h \
		json/json_spirit_value.h \
		json/json_spirit_error_position.h \
		json/json_spirit_writer_template.h \
		json/json_spirit_utils.h \
		checkpoints.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/bitcoinrpc.o bitcoinrpc.cpp

obj/rpcdump.o: rpcdump.cpp init.h \
		wallet.h \
		main.h \
		bignum.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		sync.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		ui_interface.h \
		walletdb.h \
		db.h \
		base58.h \
		bitcoinrpc.h \
		json/json_spirit_reader_template.h \
		json/json_spirit_value.h \
		json/json_spirit_error_position.h \
		json/json_spirit_writer_template.h \
		json/json_spirit_utils.h \
		checkpoints.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/rpcdump.o rpcdump.cpp

obj/rpcnet.o: rpcnet.cpp net.h \
		mruset.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		protocol.h \
		uint256.h \
		addrman.h \
		util.h \
		sync.h \
		bitcoinrpc.h \
		json/json_spirit_reader_template.h \
		json/json_spirit_value.h \
		json/json_spirit_error_position.h \
		json/json_spirit_writer_template.h \
		json/json_spirit_utils.h \
		checkpoints.h \
		alert.h \
		wallet.h \
		main.h \
		bignum.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		ui_interface.h \
		walletdb.h \
		db.h \
		base58.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/rpcnet.o rpcnet.cpp

obj/rpcmining.o: rpcmining.cpp main.h \
		bignum.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		sync.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		db.h \
		init.h \
		wallet.h \
		ui_interface.h \
		walletdb.h \
		base58.h \
		bitcoinrpc.h \
		json/json_spirit_reader_template.h \
		json/json_spirit_value.h \
		json/json_spirit_error_position.h \
		json/json_spirit_writer_template.h \
		json/json_spirit_utils.h \
		checkpoints.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/rpcmining.o rpcmining.cpp

obj/rpcwallet.o: rpcwallet.cpp wallet.h \
		main.h \
		bignum.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		sync.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		ui_interface.h \
		walletdb.h \
		db.h \
		base58.h \
		bitcoinrpc.h \
		json/json_spirit_reader_template.h \
		json/json_spirit_value.h \
		json/json_spirit_error_position.h \
		json/json_spirit_writer_template.h \
		json/json_spirit_utils.h \
		checkpoints.h \
		init.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/rpcwallet.o rpcwallet.cpp

obj/rpcblockchain.o: rpcblockchain.cpp main.h \
		bignum.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		sync.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		bitcoinrpc.h \
		json/json_spirit_reader_template.h \
		json/json_spirit_value.h \
		json/json_spirit_error_position.h \
		json/json_spirit_writer_template.h \
		json/json_spirit_utils.h \
		checkpoints.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/rpcblockchain.o rpcblockchain.cpp

obj/rpcrawtransaction.o: rpcrawtransaction.cpp base58.h \
		bignum.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		key.h \
		script.h \
		keystore.h \
		crypter.h \
		sync.h \
		bitcoinrpc.h \
		json/json_spirit_reader_template.h \
		json/json_spirit_value.h \
		json/json_spirit_error_position.h \
		json/json_spirit_writer_template.h \
		json/json_spirit_utils.h \
		checkpoints.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		db.h \
		main.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		init.h \
		wallet.h \
		ui_interface.h \
		walletdb.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/rpcrawtransaction.o rpcrawtransaction.cpp

obj/noui.o: noui.cpp ui_interface.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		init.h \
		wallet.h \
		main.h \
		bignum.h \
		sync.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		walletdb.h \
		db.h \
		base58.h \
		bitcoinrpc.h \
		json/json_spirit_reader_template.h \
		json/json_spirit_value.h \
		json/json_spirit_error_position.h \
		json/json_spirit_writer_template.h \
		json/json_spirit_utils.h \
		checkpoints.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/noui.o noui.cpp

obj/kernel.o: kernel.cpp kernel.h \
		main.h \
		bignum.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		sync.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		script.h \
		keystore.h \
		crypter.h \
		key.h \
		scrypt.h \
		hashblock.h \
		sph_blake.h \
		sph_types.h \
		sph_bmw.h \
		sph_groestl.h \
		sph_jh.h \
		sph_keccak.h \
		sph_skein.h \
		sph_luffa.h \
		sph_cubehash.h \
		sph_shavite.h \
		sph_simd.h \
		sph_echo.h \
		sph_hamsi.h \
		sph_fugue.h \
		sph_shabal.h \
		db.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/kernel.o kernel.cpp
	
obj/pbkdf2.o: pbkdf2.cpp pbkdf2.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/pbkdf2.o pbkdf2.cpp
	
obj/scrypt.o: scrypt.cpp scrypt.h \
		util.h \
		uint256.h \
		netbase.h \
		serialize.h \
		allocators.h \
		version.h \
		clientversion.h \
		compat.h \
		net.h \
		mruset.h \
		protocol.h \
		addrman.h \
		sync.h \
		pbkdf2.h
	$(CXX) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/scrypt.o scrypt.cpp

obj/scrypt-x86.o: scrypt-x86.S
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<

obj/scrypt-x86_64.o: scrypt-x86_64.S
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<
	
	
obj/blake.o: blake.c sph_blake.h \
		sph_types.h
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/blake.o blake.c

obj/bmw.o: bmw.c sph_bmw.h \
		sph_types.h
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/bmw.o bmw.c

obj/cubehash.o: cubehash.c sph_cubehash.h \
		sph_types.h
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/cubehash.o cubehash.c

obj/echo.o: echo.c sph_echo.h \
		sph_types.h \
		aes_helper.c
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/echo.o echo.c

obj/groestl.o: groestl.c sph_groestl.h \
		sph_types.h
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/groestl.o groestl.c

obj/jh.o: jh.c sph_jh.h \
		sph_types.h
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/jh.o jh.c

obj/keccak.o: keccak.c sph_keccak.h \
		sph_types.h
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/keccak.o keccak.c

obj/luffa.o: luffa.c sph_luffa.h \
		sph_types.h
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/luffa.o luffa.c

obj/shavite.o: shavite.c sph_shavite.h \
		sph_types.h \
		aes_helper.c
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/shavite.o shavite.c

obj/simd.o: simd.c sph_simd.h \
		sph_types.h
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/simd.o simd.c

obj/skein.o: skein.c sph_skein.h \
		sph_types.h
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/skein.o skein.c

obj/fugue.o: fugue.c sph_fugue.h \
		sph_types.h
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/fugue.o fugue.c

obj/hamsi.o: hamsi.c sph_hamsi.h \
		sph_types.h \
		hamsi_helper.c
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/hamsi.o hamsi.c

obj/shabal.o: shabal.c sph_shabal.h \
		sph_types.h
	$(CC) -c $(CFLAGS) $(INCLUDEPATHS) -o obj/shabal.o shabal.c

mudancoind.exe: $(OBJS:obj/%=obj/%)
	g++ $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)

TESTOBJS := $(patsubst test/%.cpp,obj-test/%.o,$(wildcard test/*.cpp))

obj-test/%.o: test/%.cpp $(HEADERS)
	g++ -c $(TESTDEFS) $(CFLAGS) -o $@ $<

test_bitcoin.exe: $(TESTOBJS) $(filter-out obj/init.o,$(OBJS:obj/%=obj/%))
	g++ $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ -lboost_unit_test_framework $(LIBS)

clean:
	-del /Q mudancoind test_mudancoin
	-del /Q obj\*
	-del /Q obj-test\*

FORCE:
